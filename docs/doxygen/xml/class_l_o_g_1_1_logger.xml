<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_l_o_g_1_1_logger" kind="class" language="C++" prot="public">
    <compoundname>LOG::Logger</compoundname>
    <includes refid="_logger_8hpp" local="no">Logger.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_l_o_g_1_1_logger_1a66fa94eef5664a1216f603a1793b09ca" prot="public" static="no">
        <type>std::function&lt; void(const char *tag, <ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref> level, const char *message)&gt;</type>
        <definition>using LOG::Logger::LogCallback =  std::function&lt;void(const char* tag, Level level, const char* message)&gt;</definition>
        <argsstring></argsstring>
        <name>LogCallback</name>
        <qualifiedname>LOG::Logger::LogCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="28" column="5" bodyfile="src/Logger.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LOG::Logger::enabled_</definition>
        <argsstring></argsstring>
        <name>enabled_</name>
        <qualifiedname>LOG::Logger::enabled_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="90" column="10" bodyfile="src/Logger.hpp" bodystart="90" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1ae8aebeb02c165c851c6b3647a35890e0" compoundref="_logger_8hpp" startline="36" endline="36">disable</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a41a95b5e1e7b4c6de0cb0c8baeae7344" compoundref="_logger_8hpp" startline="35" endline="35">enable</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" compoundref="_logger_8hpp" startline="37" endline="44">vlog</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" compoundref="_logger_8hpp" startline="45" endline="52">vlog</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a4c801aa3ac87255ef3d9755d7c3c1565" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LOG::Logger::infoColorToggle_</definition>
        <argsstring></argsstring>
        <name>infoColorToggle_</name>
        <qualifiedname>LOG::Logger::infoColorToggle_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="91" column="10" bodyfile="src/Logger.hpp" bodystart="91" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a00254b66976cfabb1d7e195c37751594" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* LOG::Logger::infoAlternateColor_</definition>
        <argsstring></argsstring>
        <name>infoAlternateColor_</name>
        <qualifiedname>LOG::Logger::infoAlternateColor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="92" column="16" bodyfile="src/Logger.hpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1ab6e414285f56abf53bdbc78ad7ec52a1" compoundref="_logger_8hpp" startline="69" endline="69">setInfoAlternateColor</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a1ab2af65528eb275022c99aecc593719" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LOG::Logger::timestampEnabled_</definition>
        <argsstring></argsstring>
        <name>timestampEnabled_</name>
        <qualifiedname>LOG::Logger::timestampEnabled_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="93" column="10" bodyfile="src/Logger.hpp" bodystart="93" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a0a83875a11650c3fc2015248b6ae638a" compoundref="_logger_8hpp" startline="63" endline="63">disableTimestamps</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acdb1319a3d218b7ae2cdc30bba67e843" compoundref="_logger_8hpp" startline="62" endline="62">enableTimestamps</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
        <definition>Level LOG::Logger::minimumLevel_</definition>
        <argsstring></argsstring>
        <name>minimumLevel_</name>
        <qualifiedname>LOG::Logger::minimumLevel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="94" column="11" bodyfile="src/Logger.hpp" bodystart="94" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1ac1acadc85744f8b3e3d543d5ee076a16" compoundref="_logger_8hpp" startline="70" endline="70">setMinimumLevel</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" compoundref="_logger_8hpp" startline="37" endline="44">vlog</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" compoundref="_logger_8hpp" startline="45" endline="52">vlog</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" prot="private" static="no" mutable="no">
        <type>std::bitset&lt; 6 &gt;</type>
        <definition>std::bitset&lt;6&gt; LOG::Logger::enabledLevels_</definition>
        <argsstring></argsstring>
        <name>enabledLevels_</name>
        <qualifiedname>LOG::Logger::enabledLevels_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="95" column="17" bodyfile="src/Logger.hpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a4a179c03b181bad314d4dccbba6b2c13" compoundref="_logger_8hpp" startline="54" endline="54">disableLevel</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a7f0f597abcedd4595028a380fba3e70c" compoundref="_logger_8hpp" startline="53" endline="53">enableLevel</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a454d6cbdf2283334678d60a561e9c8ec" compoundref="_logger_8hpp" startline="55" endline="58">isLevelEnabled</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a0dd6a6ddcd02ff618b31cce2397c7f7d" prot="private" static="no" mutable="no">
        <type>std::array&lt; const char *, 6 &gt;</type>
        <definition>std::array&lt;const char*, 6&gt; LOG::Logger::levelColors_</definition>
        <argsstring></argsstring>
        <name>levelColors_</name>
        <qualifiedname>LOG::Logger::levelColors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="96" column="16" bodyfile="src/Logger.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a31a5af0b96984cae986a5e26f1329c36" compoundref="_logger_8hpp" startline="65" endline="68">setLevelColor</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; LOG::Logger::blockedTags_</definition>
        <argsstring></argsstring>
        <name>blockedTags_</name>
        <qualifiedname>LOG::Logger::blockedTags_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="97" column="24" bodyfile="src/Logger.hpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1ab3972d001cfda06b2d3f541fb0e5db45" compoundref="_logger_8hpp" startline="59" endline="59">blockTag</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a5bf52a4df659f28682c41870cc3dd85b" compoundref="_logger_8hpp" startline="61" endline="61">isTagBlocked</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a09e8017b40ede3d9bf8c0be52f5420b1" compoundref="_logger_8hpp" startline="60" endline="60">unblockTag</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" compoundref="_logger_8hpp" startline="37" endline="44">vlog</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_o_g_1_1_logger_1a8fdbb744c7798d6af4917ae263e235f2" prot="private" static="no" mutable="no">
        <type><ref refid="class_l_o_g_1_1_logger_1a66fa94eef5664a1216f603a1793b09ca" kindref="member">LogCallback</ref></type>
        <definition>LogCallback LOG::Logger::logCallback_</definition>
        <argsstring></argsstring>
        <name>logCallback_</name>
        <qualifiedname>LOG::Logger::logCallback_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="98" column="17" bodyfile="src/Logger.hpp" bodystart="98" bodyend="-1"/>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a012a550ef1bc6c77ae66eb4925a174bb" compoundref="_logger_8hpp" startline="64" endline="64">setLogCallback</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ac6e610c5678fb1742dbd5f3870da5c17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_l_o_g_1_1_logger" kindref="compound">Logger</ref> &amp;</type>
        <definition>static Logger &amp; LOG::Logger::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>LOG::Logger::getInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="30" column="19" bodyfile="src/Logger.hpp" bodystart="30" bodyend="34"/>
        <references refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</references>
        <referencedby refid="namespace_l_o_g_1a45368f04d2851ced6a50cfe31d6b4ab6" compoundref="_logger_8hpp" startline="330" endline="330">LOG::BLOCK_TAG</referencedby>
        <referencedby refid="namespace_l_o_g_1acca4968543615b1b2d77ebac8fe74993" compoundref="_logger_8hpp" startline="245" endline="251">LOG::DEBUG</referencedby>
        <referencedby refid="namespace_l_o_g_1acd0072a098872064e882d347d1e30d9a" compoundref="_logger_8hpp" startline="238" endline="244">LOG::DEBUG</referencedby>
        <referencedby refid="namespace_l_o_g_1afd19d5f46e5cc24eba14f5698ba61979" compoundref="_logger_8hpp" startline="328" endline="328">LOG::DISABLE</referencedby>
        <referencedby refid="namespace_l_o_g_1a9c8041ed47c5c6124e6ab9ba2a606136" compoundref="_logger_8hpp" startline="329" endline="329">LOG::DISABLE</referencedby>
        <referencedby refid="namespace_l_o_g_1a9bb02e1972964f296fc4817a03352b6c" compoundref="_logger_8hpp" startline="337" endline="337">LOG::DISABLE_TIMESTAMPS</referencedby>
        <referencedby refid="namespace_l_o_g_1a967dd6d62dde58bb5cc0bcf4b155ce71" compoundref="_logger_8hpp" startline="322" endline="322">LOG::ENABLE</referencedby>
        <referencedby refid="namespace_l_o_g_1a2367c9d0ae19ba363f09b8bde85b4eb2" compoundref="_logger_8hpp" startline="323" endline="327">LOG::ENABLE</referencedby>
        <referencedby refid="namespace_l_o_g_1a0c9a7fe020ae17df56a5cd09509f58c3" compoundref="_logger_8hpp" startline="332" endline="336">LOG::ENABLE_TIMESTAMPS</referencedby>
        <referencedby refid="namespace_l_o_g_1aa855cfb2252b131f3943e5d28159aaad" compoundref="_logger_8hpp" startline="315" endline="321">LOG::ERROR</referencedby>
        <referencedby refid="namespace_l_o_g_1a7607c756b43837627f99d36ef7cae158" compoundref="_logger_8hpp" startline="308" endline="314">LOG::ERROR</referencedby>
        <referencedby refid="namespace_l_o_g_1a7739e398da33ae660653dd66478095bd" compoundref="_logger_8hpp" startline="273" endline="279">LOG::INFO</referencedby>
        <referencedby refid="namespace_l_o_g_1a6cfde2e40cb91d10e175b3f42d3b2214" compoundref="_logger_8hpp" startline="266" endline="272">LOG::INFO</referencedby>
        <referencedby refid="namespace_l_o_g_1a53938bb96516a83429c842284cefa6aa" compoundref="_logger_8hpp" startline="259" endline="265">LOG::LOG_TEST</referencedby>
        <referencedby refid="namespace_l_o_g_1a26e0f6934ba0223295910736aec08de5" compoundref="_logger_8hpp" startline="252" endline="258">LOG::LOG_TEST</referencedby>
        <referencedby refid="namespace_l_o_g_1a64d34a15b936414d5a979de4e0ab4c0c" compoundref="_logger_8hpp" startline="287" endline="293">LOG::SUCCESS</referencedby>
        <referencedby refid="namespace_l_o_g_1af765327ccca9fa0237950bf1b7deec48" compoundref="_logger_8hpp" startline="280" endline="286">LOG::SUCCESS</referencedby>
        <referencedby refid="namespace_l_o_g_1abe6d0eaaff4fbea93b02ed1e02d80297" compoundref="_logger_8hpp" startline="331" endline="331">LOG::UNBLOCK_TAG</referencedby>
        <referencedby refid="namespace_l_o_g_1afffb00cbecc05c1b0120b9151463a4e9" compoundref="_logger_8hpp" startline="301" endline="307">LOG::WARNING</referencedby>
        <referencedby refid="namespace_l_o_g_1a81ab26058729e014fefed7ca63a94ce0" compoundref="_logger_8hpp" startline="294" endline="300">LOG::WARNING</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a41a95b5e1e7b4c6de0cb0c8baeae7344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::enable</definition>
        <argsstring>()</argsstring>
        <name>enable</name>
        <qualifiedname>LOG::Logger::enable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="35" column="10" bodyfile="src/Logger.hpp" bodystart="35" bodyend="35"/>
        <references refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" compoundref="_logger_8hpp" startline="90">enabled_</references>
        <referencedby refid="namespace_l_o_g_1a967dd6d62dde58bb5cc0bcf4b155ce71" compoundref="_logger_8hpp" startline="322" endline="322">LOG::ENABLE</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acdb1319a3d218b7ae2cdc30bba67e843" compoundref="_logger_8hpp" startline="62" endline="62">enableTimestamps</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ae8aebeb02c165c851c6b3647a35890e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <qualifiedname>LOG::Logger::disable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="36" column="10" bodyfile="src/Logger.hpp" bodystart="36" bodyend="36"/>
        <references refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" compoundref="_logger_8hpp" startline="90">enabled_</references>
        <referencedby refid="namespace_l_o_g_1afd19d5f46e5cc24eba14f5698ba61979" compoundref="_logger_8hpp" startline="328" endline="328">LOG::DISABLE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::vlog</definition>
        <argsstring>(const char *tag, Level level, const char *format, va_list args)</argsstring>
        <name>vlog</name>
        <qualifiedname>LOG::Logger::vlog</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="37" column="10" bodyfile="src/Logger.hpp" bodystart="37" bodyend="44"/>
        <references refid="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" compoundref="_logger_8hpp" startline="97">blockedTags_</references>
        <references refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" compoundref="_logger_8hpp" startline="90">enabled_</references>
        <references refid="class_l_o_g_1_1_logger_1a454d6cbdf2283334678d60a561e9c8ec" compoundref="_logger_8hpp" startline="55" endline="58">isLevelEnabled</references>
        <references refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</references>
        <references refid="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" compoundref="_logger_8hpp" startline="94">minimumLevel_</references>
        <referencedby refid="namespace_l_o_g_1acca4968543615b1b2d77ebac8fe74993" compoundref="_logger_8hpp" startline="245" endline="251">LOG::DEBUG</referencedby>
        <referencedby refid="namespace_l_o_g_1acd0072a098872064e882d347d1e30d9a" compoundref="_logger_8hpp" startline="238" endline="244">LOG::DEBUG</referencedby>
        <referencedby refid="namespace_l_o_g_1aa855cfb2252b131f3943e5d28159aaad" compoundref="_logger_8hpp" startline="315" endline="321">LOG::ERROR</referencedby>
        <referencedby refid="namespace_l_o_g_1a7607c756b43837627f99d36ef7cae158" compoundref="_logger_8hpp" startline="308" endline="314">LOG::ERROR</referencedby>
        <referencedby refid="namespace_l_o_g_1a7739e398da33ae660653dd66478095bd" compoundref="_logger_8hpp" startline="273" endline="279">LOG::INFO</referencedby>
        <referencedby refid="namespace_l_o_g_1a6cfde2e40cb91d10e175b3f42d3b2214" compoundref="_logger_8hpp" startline="266" endline="272">LOG::INFO</referencedby>
        <referencedby refid="namespace_l_o_g_1a53938bb96516a83429c842284cefa6aa" compoundref="_logger_8hpp" startline="259" endline="265">LOG::LOG_TEST</referencedby>
        <referencedby refid="namespace_l_o_g_1a26e0f6934ba0223295910736aec08de5" compoundref="_logger_8hpp" startline="252" endline="258">LOG::LOG_TEST</referencedby>
        <referencedby refid="namespace_l_o_g_1a64d34a15b936414d5a979de4e0ab4c0c" compoundref="_logger_8hpp" startline="287" endline="293">LOG::SUCCESS</referencedby>
        <referencedby refid="namespace_l_o_g_1af765327ccca9fa0237950bf1b7deec48" compoundref="_logger_8hpp" startline="280" endline="286">LOG::SUCCESS</referencedby>
        <referencedby refid="namespace_l_o_g_1afffb00cbecc05c1b0120b9151463a4e9" compoundref="_logger_8hpp" startline="301" endline="307">LOG::WARNING</referencedby>
        <referencedby refid="namespace_l_o_g_1a81ab26058729e014fefed7ca63a94ce0" compoundref="_logger_8hpp" startline="294" endline="300">LOG::WARNING</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::vlog</definition>
        <argsstring>(Level level, const char *format, va_list args)</argsstring>
        <name>vlog</name>
        <qualifiedname>LOG::Logger::vlog</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="45" column="10" bodyfile="src/Logger.hpp" bodystart="45" bodyend="52"/>
        <references refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" compoundref="_logger_8hpp" startline="90">enabled_</references>
        <references refid="class_l_o_g_1_1_logger_1a454d6cbdf2283334678d60a561e9c8ec" compoundref="_logger_8hpp" startline="55" endline="58">isLevelEnabled</references>
        <references refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</references>
        <references refid="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" compoundref="_logger_8hpp" startline="94">minimumLevel_</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a7f0f597abcedd4595028a380fba3e70c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::enableLevel</definition>
        <argsstring>(Level level)</argsstring>
        <name>enableLevel</name>
        <qualifiedname>LOG::Logger::enableLevel</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="53" column="10" bodyfile="src/Logger.hpp" bodystart="53" bodyend="53"/>
        <references refid="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" compoundref="_logger_8hpp" startline="95">enabledLevels_</references>
        <referencedby refid="namespace_l_o_g_1a2367c9d0ae19ba363f09b8bde85b4eb2" compoundref="_logger_8hpp" startline="323" endline="327">LOG::ENABLE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a4a179c03b181bad314d4dccbba6b2c13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::disableLevel</definition>
        <argsstring>(Level level)</argsstring>
        <name>disableLevel</name>
        <qualifiedname>LOG::Logger::disableLevel</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="54" column="10" bodyfile="src/Logger.hpp" bodystart="54" bodyend="54"/>
        <references refid="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" compoundref="_logger_8hpp" startline="95">enabledLevels_</references>
        <referencedby refid="namespace_l_o_g_1a9c8041ed47c5c6124e6ab9ba2a606136" compoundref="_logger_8hpp" startline="329" endline="329">LOG::DISABLE</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a454d6cbdf2283334678d60a561e9c8ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool LOG::Logger::isLevelEnabled</definition>
        <argsstring>(Level level) const</argsstring>
        <name>isLevelEnabled</name>
        <qualifiedname>LOG::Logger::isLevelEnabled</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="55" column="10" bodyfile="src/Logger.hpp" bodystart="55" bodyend="58"/>
        <references refid="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" compoundref="_logger_8hpp" startline="95">enabledLevels_</references>
        <referencedby refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" compoundref="_logger_8hpp" startline="37" endline="44">vlog</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" compoundref="_logger_8hpp" startline="45" endline="52">vlog</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ab3972d001cfda06b2d3f541fb0e5db45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::blockTag</definition>
        <argsstring>(const char *tag)</argsstring>
        <name>blockTag</name>
        <qualifiedname>LOG::Logger::blockTag</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="59" column="10" bodyfile="src/Logger.hpp" bodystart="59" bodyend="59"/>
        <references refid="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" compoundref="_logger_8hpp" startline="97">blockedTags_</references>
        <referencedby refid="namespace_l_o_g_1a45368f04d2851ced6a50cfe31d6b4ab6" compoundref="_logger_8hpp" startline="330" endline="330">LOG::BLOCK_TAG</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a09e8017b40ede3d9bf8c0be52f5420b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::unblockTag</definition>
        <argsstring>(const char *tag)</argsstring>
        <name>unblockTag</name>
        <qualifiedname>LOG::Logger::unblockTag</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="60" column="10" bodyfile="src/Logger.hpp" bodystart="60" bodyend="60"/>
        <references refid="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" compoundref="_logger_8hpp" startline="97">blockedTags_</references>
        <referencedby refid="namespace_l_o_g_1abe6d0eaaff4fbea93b02ed1e02d80297" compoundref="_logger_8hpp" startline="331" endline="331">LOG::UNBLOCK_TAG</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a5bf52a4df659f28682c41870cc3dd85b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool LOG::Logger::isTagBlocked</definition>
        <argsstring>(const char *tag) const</argsstring>
        <name>isTagBlocked</name>
        <qualifiedname>LOG::Logger::isTagBlocked</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="61" column="10" bodyfile="src/Logger.hpp" bodystart="61" bodyend="61"/>
        <references refid="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" compoundref="_logger_8hpp" startline="97">blockedTags_</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1acdb1319a3d218b7ae2cdc30bba67e843" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::enableTimestamps</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>enableTimestamps</name>
        <qualifiedname>LOG::Logger::enableTimestamps</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="62" column="10" bodyfile="src/Logger.hpp" bodystart="62" bodyend="62"/>
        <references refid="class_l_o_g_1_1_logger_1a41a95b5e1e7b4c6de0cb0c8baeae7344" compoundref="_logger_8hpp" startline="35" endline="35">enable</references>
        <references refid="class_l_o_g_1_1_logger_1a1ab2af65528eb275022c99aecc593719" compoundref="_logger_8hpp" startline="93">timestampEnabled_</references>
        <referencedby refid="namespace_l_o_g_1a0c9a7fe020ae17df56a5cd09509f58c3" compoundref="_logger_8hpp" startline="332" endline="336">LOG::ENABLE_TIMESTAMPS</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a0a83875a11650c3fc2015248b6ae638a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::disableTimestamps</definition>
        <argsstring>()</argsstring>
        <name>disableTimestamps</name>
        <qualifiedname>LOG::Logger::disableTimestamps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="63" column="10" bodyfile="src/Logger.hpp" bodystart="63" bodyend="63"/>
        <references refid="class_l_o_g_1_1_logger_1a1ab2af65528eb275022c99aecc593719" compoundref="_logger_8hpp" startline="93">timestampEnabled_</references>
        <referencedby refid="namespace_l_o_g_1a9bb02e1972964f296fc4817a03352b6c" compoundref="_logger_8hpp" startline="337" endline="337">LOG::DISABLE_TIMESTAMPS</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a012a550ef1bc6c77ae66eb4925a174bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::setLogCallback</definition>
        <argsstring>(LogCallback callback)</argsstring>
        <name>setLogCallback</name>
        <qualifiedname>LOG::Logger::setLogCallback</qualifiedname>
        <param>
          <type><ref refid="class_l_o_g_1_1_logger_1a66fa94eef5664a1216f603a1793b09ca" kindref="member">LogCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="64" column="10" bodyfile="src/Logger.hpp" bodystart="64" bodyend="64"/>
        <references refid="class_l_o_g_1_1_logger_1a8fdbb744c7798d6af4917ae263e235f2" compoundref="_logger_8hpp" startline="98">logCallback_</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a31a5af0b96984cae986a5e26f1329c36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::setLevelColor</definition>
        <argsstring>(Level level, const char *color)</argsstring>
        <name>setLevelColor</name>
        <qualifiedname>LOG::Logger::setLevelColor</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="65" column="10" bodyfile="src/Logger.hpp" bodystart="65" bodyend="68"/>
        <references refid="class_l_o_g_1_1_logger_1a0dd6a6ddcd02ff618b31cce2397c7f7d" compoundref="_logger_8hpp" startline="96">levelColors_</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ab6e414285f56abf53bdbc78ad7ec52a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::setInfoAlternateColor</definition>
        <argsstring>(const char *color)</argsstring>
        <name>setInfoAlternateColor</name>
        <qualifiedname>LOG::Logger::setInfoAlternateColor</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="69" column="10" bodyfile="src/Logger.hpp" bodystart="69" bodyend="69"/>
        <references refid="class_l_o_g_1_1_logger_1a00254b66976cfabb1d7e195c37751594" compoundref="_logger_8hpp" startline="92">infoAlternateColor_</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ac1acadc85744f8b3e3d543d5ee076a16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::setMinimumLevel</definition>
        <argsstring>(Level level)</argsstring>
        <name>setMinimumLevel</name>
        <qualifiedname>LOG::Logger::setMinimumLevel</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="70" column="10" bodyfile="src/Logger.hpp" bodystart="70" bodyend="70"/>
        <references refid="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" compoundref="_logger_8hpp" startline="94">minimumLevel_</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LOG::Logger::Logger</definition>
        <argsstring>()</argsstring>
        <name>Logger</name>
        <qualifiedname>LOG::Logger::Logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="73" column="5" bodyfile="src/Logger.hpp" bodystart="73" bodyend="89"/>
        <references refid="namespace_l_o_g_1acd0072a098872064e882d347d1e30d9a" compoundref="_logger_8hpp" startline="238" endline="244">LOG::DEBUG</references>
        <references refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" compoundref="_logger_8hpp" startline="90">enabled_</references>
        <references refid="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" compoundref="_logger_8hpp" startline="95">enabledLevels_</references>
        <references refid="class_l_o_g_1_1_logger_1a00254b66976cfabb1d7e195c37751594" compoundref="_logger_8hpp" startline="92">infoAlternateColor_</references>
        <references refid="class_l_o_g_1_1_logger_1a4c801aa3ac87255ef3d9755d7c3c1565" compoundref="_logger_8hpp" startline="91">infoColorToggle_</references>
        <references refid="class_l_o_g_1_1_logger_1a0dd6a6ddcd02ff618b31cce2397c7f7d" compoundref="_logger_8hpp" startline="96">levelColors_</references>
        <references refid="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" compoundref="_logger_8hpp" startline="94">minimumLevel_</references>
        <references refid="class_l_o_g_1_1_logger_1a1ab2af65528eb275022c99aecc593719" compoundref="_logger_8hpp" startline="93">timestampEnabled_</references>
        <referencedby refid="class_l_o_g_1_1_logger_1ac6e610c5678fb1742dbd5f3870da5c17" compoundref="_logger_8hpp" startline="30" endline="34">getInstance</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1a371ee2f5a0c4f72498744138af9f91bb">Logger</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1aab5bd0699673e20ac4a3a9d78f99e8bd">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::logInternal</definition>
        <argsstring>(const char *tag, Level level, const char *format, va_list args)</argsstring>
        <name>logInternal</name>
        <qualifiedname>LOG::Logger::logInternal</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="99" column="10" bodyfile="src/Logger.hpp" bodystart="99" bodyend="127"/>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043a551b723eafd6a31d444fcb2f5920fbd3" compoundref="_logger_8hpp" startline="19">LOG::INFO</references>
        <references refid="class_l_o_g_1_1_logger_1a00254b66976cfabb1d7e195c37751594" compoundref="_logger_8hpp" startline="92">infoAlternateColor_</references>
        <references refid="class_l_o_g_1_1_logger_1a4c801aa3ac87255ef3d9755d7c3c1565" compoundref="_logger_8hpp" startline="91">infoColorToggle_</references>
        <references refid="class_l_o_g_1_1_logger_1a0dd6a6ddcd02ff618b31cce2397c7f7d" compoundref="_logger_8hpp" startline="96">levelColors_</references>
        <references refid="namespace_l_o_g_1a20f1e0ea2f5953b20c28b2b238f8c5d6" compoundref="_logger_8hpp" startline="15">LOG::LOG_BUFFER_SIZE</references>
        <references refid="class_l_o_g_1_1_logger_1a8fdbb744c7798d6af4917ae263e235f2" compoundref="_logger_8hpp" startline="98">logCallback_</references>
        <references refid="class_l_o_g_1_1_logger_1a16496ae8e563f143f87dd028640ae508" compoundref="_logger_8hpp" startline="213" endline="232">logLevelToString</references>
        <references refid="class_l_o_g_1_1_logger_1ac12cee96c21a9cdaab5251533de22734" compoundref="_logger_8hpp" startline="128" endline="138">processFormat</references>
        <referencedby refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" compoundref="_logger_8hpp" startline="37" endline="44">vlog</referencedby>
        <referencedby refid="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" compoundref="_logger_8hpp" startline="45" endline="52">vlog</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ac12cee96c21a9cdaab5251533de22734" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::processFormat</definition>
        <argsstring>(char *buffer, size_t bufferSize, const char *format, va_list args)</argsstring>
        <name>processFormat</name>
        <qualifiedname>LOG::Logger::processFormat</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="128" column="10" bodyfile="src/Logger.hpp" bodystart="128" bodyend="138"/>
        <references refid="class_l_o_g_1_1_logger_1a04c97325afbcf928407010c4fb464f0b" compoundref="_logger_8hpp" startline="204" endline="212">handleBinaryFormat</references>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1adcf40bff2af8056ebf43f019ad311dc1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::formatBinary</definition>
        <argsstring>(char *buffer, size_t bufferSize, uint32_t value, int uppercase)</argsstring>
        <name>formatBinary</name>
        <qualifiedname>LOG::Logger::formatBinary</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uppercase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="139" column="10" bodyfile="src/Logger.hpp" bodystart="139" bodyend="173"/>
        <referencedby refid="class_l_o_g_1_1_logger_1ad2f867eb388b55a304952af25aaaae3c" compoundref="_logger_8hpp" startline="174" endline="203">buildModifiedFormat</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1ad2f867eb388b55a304952af25aaaae3c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::buildModifiedFormat</definition>
        <argsstring>(char *modifiedFormat, size_t formatSize, const char *format, va_list args)</argsstring>
        <name>buildModifiedFormat</name>
        <qualifiedname>LOG::Logger::buildModifiedFormat</qualifiedname>
        <param>
          <type>char *</type>
          <declname>modifiedFormat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>formatSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="174" column="10" bodyfile="src/Logger.hpp" bodystart="174" bodyend="203"/>
        <references refid="class_l_o_g_1_1_logger_1adcf40bff2af8056ebf43f019ad311dc1" compoundref="_logger_8hpp" startline="139" endline="173">formatBinary</references>
        <referencedby refid="class_l_o_g_1_1_logger_1a04c97325afbcf928407010c4fb464f0b" compoundref="_logger_8hpp" startline="204" endline="212">handleBinaryFormat</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a04c97325afbcf928407010c4fb464f0b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LOG::Logger::handleBinaryFormat</definition>
        <argsstring>(char *buffer, size_t bufferSize, const char *format, va_list args)</argsstring>
        <name>handleBinaryFormat</name>
        <qualifiedname>LOG::Logger::handleBinaryFormat</qualifiedname>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="204" column="10" bodyfile="src/Logger.hpp" bodystart="204" bodyend="212"/>
        <references refid="class_l_o_g_1_1_logger_1ad2f867eb388b55a304952af25aaaae3c" compoundref="_logger_8hpp" startline="174" endline="203">buildModifiedFormat</references>
        <references refid="namespace_l_o_g_1a20f1e0ea2f5953b20c28b2b238f8c5d6" compoundref="_logger_8hpp" startline="15">LOG::LOG_BUFFER_SIZE</references>
        <referencedby refid="class_l_o_g_1_1_logger_1ac12cee96c21a9cdaab5251533de22734" compoundref="_logger_8hpp" startline="128" endline="138">processFormat</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a16496ae8e563f143f87dd028640ae508" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * LOG::Logger::logLevelToString</definition>
        <argsstring>(Level level)</argsstring>
        <name>logLevelToString</name>
        <qualifiedname>LOG::Logger::logLevelToString</qualifiedname>
        <param>
          <type><ref refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043" kindref="member">Level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="213" column="16" bodyfile="src/Logger.hpp" bodystart="213" bodyend="232"/>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043adc30ec20708ef7b0f641ef78b7880a15" compoundref="_logger_8hpp" startline="17">LOG::DEBUG</references>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043abb1ca97ec761fc37101737ba0aa2e7c5" compoundref="_logger_8hpp" startline="22">LOG::ERROR</references>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043a551b723eafd6a31d444fcb2f5920fbd3" compoundref="_logger_8hpp" startline="19">LOG::INFO</references>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043ad0749aaba8b833466dfcbb0428e4f89c" compoundref="_logger_8hpp" startline="20">LOG::SUCCESS</references>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043a033bd94b1168d7e4f0d644c3c95e35bf" compoundref="_logger_8hpp" startline="18">LOG::TEST</references>
        <references refid="namespace_l_o_g_1a9a5ec8f75979677739eddc5e1e61c043a059e9861e0400dfbe05c98a841f3f96b" compoundref="_logger_8hpp" startline="21">LOG::WARNING</references>
        <referencedby refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" compoundref="_logger_8hpp" startline="99" endline="127">logInternal</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1a371ee2f5a0c4f72498744138af9f91bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LOG::Logger::Logger</definition>
        <argsstring>(const Logger &amp;)=delete</argsstring>
        <name>Logger</name>
        <qualifiedname>LOG::Logger::Logger</qualifiedname>
        <param>
          <type>const <ref refid="class_l_o_g_1_1_logger" kindref="compound">Logger</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="233" column="5"/>
        <references refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</references>
      </memberdef>
      <memberdef kind="function" id="class_l_o_g_1_1_logger_1aab5bd0699673e20ac4a3a9d78f99e8bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_l_o_g_1_1_logger" kindref="compound">Logger</ref> &amp;</type>
        <definition>Logger &amp; LOG::Logger::operator=</definition>
        <argsstring>(const Logger &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>LOG::Logger::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_l_o_g_1_1_logger" kindref="compound">Logger</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Logger.hpp" line="234" column="12"/>
        <references refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" compoundref="_logger_8hpp" startline="73" endline="89">Logger</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Logger.hpp" line="25" column="1" bodyfile="src/Logger.hpp" bodystart="26" bodyend="235"/>
    <listofallmembers>
      <member refid="class_l_o_g_1_1_logger_1adba09332b5b562cf5d9a8e56eb0682e3" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>blockedTags_</name></member>
      <member refid="class_l_o_g_1_1_logger_1ab3972d001cfda06b2d3f541fb0e5db45" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>blockTag</name></member>
      <member refid="class_l_o_g_1_1_logger_1ad2f867eb388b55a304952af25aaaae3c" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>buildModifiedFormat</name></member>
      <member refid="class_l_o_g_1_1_logger_1ae8aebeb02c165c851c6b3647a35890e0" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>disable</name></member>
      <member refid="class_l_o_g_1_1_logger_1a4a179c03b181bad314d4dccbba6b2c13" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>disableLevel</name></member>
      <member refid="class_l_o_g_1_1_logger_1a0a83875a11650c3fc2015248b6ae638a" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>disableTimestamps</name></member>
      <member refid="class_l_o_g_1_1_logger_1a41a95b5e1e7b4c6de0cb0c8baeae7344" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>enable</name></member>
      <member refid="class_l_o_g_1_1_logger_1a652dc860b70afebbb844a14dbf65309e" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>enabled_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a5ed1ec037f6959fc2bc40b09cd61b394" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>enabledLevels_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a7f0f597abcedd4595028a380fba3e70c" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>enableLevel</name></member>
      <member refid="class_l_o_g_1_1_logger_1acdb1319a3d218b7ae2cdc30bba67e843" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>enableTimestamps</name></member>
      <member refid="class_l_o_g_1_1_logger_1adcf40bff2af8056ebf43f019ad311dc1" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>formatBinary</name></member>
      <member refid="class_l_o_g_1_1_logger_1ac6e610c5678fb1742dbd5f3870da5c17" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>getInstance</name></member>
      <member refid="class_l_o_g_1_1_logger_1a04c97325afbcf928407010c4fb464f0b" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>handleBinaryFormat</name></member>
      <member refid="class_l_o_g_1_1_logger_1a00254b66976cfabb1d7e195c37751594" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>infoAlternateColor_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a4c801aa3ac87255ef3d9755d7c3c1565" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>infoColorToggle_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a454d6cbdf2283334678d60a561e9c8ec" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>isLevelEnabled</name></member>
      <member refid="class_l_o_g_1_1_logger_1a5bf52a4df659f28682c41870cc3dd85b" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>isTagBlocked</name></member>
      <member refid="class_l_o_g_1_1_logger_1a0dd6a6ddcd02ff618b31cce2397c7f7d" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>levelColors_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a66fa94eef5664a1216f603a1793b09ca" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>LogCallback</name></member>
      <member refid="class_l_o_g_1_1_logger_1a8fdbb744c7798d6af4917ae263e235f2" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>logCallback_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a4abba1293f8af80ad709f36348f117cf" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>Logger</name></member>
      <member refid="class_l_o_g_1_1_logger_1a371ee2f5a0c4f72498744138af9f91bb" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>Logger</name></member>
      <member refid="class_l_o_g_1_1_logger_1a40e44f60acd6450806a71dc5c8759bf8" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>logInternal</name></member>
      <member refid="class_l_o_g_1_1_logger_1a16496ae8e563f143f87dd028640ae508" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>logLevelToString</name></member>
      <member refid="class_l_o_g_1_1_logger_1a515a9eee268d5b519fa1d036660b2543" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>minimumLevel_</name></member>
      <member refid="class_l_o_g_1_1_logger_1aab5bd0699673e20ac4a3a9d78f99e8bd" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>operator=</name></member>
      <member refid="class_l_o_g_1_1_logger_1ac12cee96c21a9cdaab5251533de22734" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>processFormat</name></member>
      <member refid="class_l_o_g_1_1_logger_1ab6e414285f56abf53bdbc78ad7ec52a1" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>setInfoAlternateColor</name></member>
      <member refid="class_l_o_g_1_1_logger_1a31a5af0b96984cae986a5e26f1329c36" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>setLevelColor</name></member>
      <member refid="class_l_o_g_1_1_logger_1a012a550ef1bc6c77ae66eb4925a174bb" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>setLogCallback</name></member>
      <member refid="class_l_o_g_1_1_logger_1ac1acadc85744f8b3e3d543d5ee076a16" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>setMinimumLevel</name></member>
      <member refid="class_l_o_g_1_1_logger_1a1ab2af65528eb275022c99aecc593719" prot="private" virt="non-virtual"><scope>LOG::Logger</scope><name>timestampEnabled_</name></member>
      <member refid="class_l_o_g_1_1_logger_1a09e8017b40ede3d9bf8c0be52f5420b1" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>unblockTag</name></member>
      <member refid="class_l_o_g_1_1_logger_1ae73b748603687c43f3f256f3d4292ae7" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>vlog</name></member>
      <member refid="class_l_o_g_1_1_logger_1acbc58f71966974f97fc00365420fd111" prot="public" virt="non-virtual"><scope>LOG::Logger</scope><name>vlog</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

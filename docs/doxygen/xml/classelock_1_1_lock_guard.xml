<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classelock_1_1_lock_guard" kind="class" language="C++" prot="public">
    <compoundname>elock::LockGuard</compoundname>
    <includes refid="global_e_lock_8hpp" local="no">globalELock.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classelock_1_1_lock_guard_1a472ae8166cd1fb102519721195f14044" prot="private" static="no" mutable="no">
        <type><ref refid="classelock_1_1_i_lockable" kindref="compound">ILockable</ref> &amp;</type>
        <definition>ILockable&amp; elock::LockGuard::lock_</definition>
        <argsstring></argsstring>
        <name>lock_</name>
        <qualifiedname>elock::LockGuard::lock_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="101" column="15" bodyfile="src/globalELock.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classelock_1_1_lock_guard_1a156037843b070163ae81f254bce32b81" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool elock::LockGuard::acquired_</definition>
        <argsstring></argsstring>
        <name>acquired_</name>
        <qualifiedname>elock::LockGuard::acquired_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="102" column="10" bodyfile="src/globalELock.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classelock_1_1_lock_guard_1a0b11368064442a10b7aaee01aef8b319" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>elock::LockGuard::LockGuard</definition>
        <argsstring>(ILockable &amp;lock, uint32_t timeout_ms=0xFFFFFFFF)</argsstring>
        <name>LockGuard</name>
        <qualifiedname>elock::LockGuard::LockGuard</qualifiedname>
        <param>
          <type><ref refid="classelock_1_1_i_lockable" kindref="compound">ILockable</ref> &amp;</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
          <defval>0xFFFFFFFF</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="94" column="5" bodyfile="src/globalELock.hpp" bodystart="94" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classelock_1_1_lock_guard_1ae2e4bdc421adeb77e4c4a7f1399250bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>elock::LockGuard::~LockGuard</definition>
        <argsstring>()</argsstring>
        <name>~LockGuard</name>
        <qualifiedname>elock::LockGuard::~LockGuard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="96" column="5" bodyfile="src/globalELock.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classelock_1_1_lock_guard_1ae263dabf7533cf813161ea42ea065c77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool elock::LockGuard::acquired</definition>
        <argsstring>() const</argsstring>
        <name>acquired</name>
        <qualifiedname>elock::LockGuard::acquired</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="97" column="10" bodyfile="src/globalELock.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classelock_1_1_lock_guard_1af9fcde875965bdc439396a074c0217b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>elock::LockGuard::LockGuard</definition>
        <argsstring>(const LockGuard &amp;)=delete</argsstring>
        <name>LockGuard</name>
        <qualifiedname>elock::LockGuard::LockGuard</qualifiedname>
        <param>
          <type>const <ref refid="classelock_1_1_lock_guard" kindref="compound">LockGuard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="98" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classelock_1_1_lock_guard_1ad963b05624fcc754ddae382faade9bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classelock_1_1_lock_guard" kindref="compound">LockGuard</ref> &amp;</type>
        <definition>LockGuard &amp; elock::LockGuard::operator=</definition>
        <argsstring>(const LockGuard &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>elock::LockGuard::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classelock_1_1_lock_guard" kindref="compound">LockGuard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/globalELock.hpp" line="99" column="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A universal RAII lock guard class that manages a lock&apos;s lifetime. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a RAII-style mechanism to automatically acquire a lock upon construction and release it upon destruction. It wraps a reference to an <ref refid="classelock_1_1_i_lockable" kindref="compound">ILockable</ref> object and attempts to acquire the lock using an optional timeout parameter. The lock is released in the destructor if it was successfully acquired.</para>
<para><simplesect kind="note"><para>Copy construction and copy-assignment are disabled to prevent multiple ownership of the same lock.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lock</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to an <ref refid="classelock_1_1_i_lockable" kindref="compound">ILockable</ref> object managing the lock. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>The timeout in milliseconds for acquiring the lock (default is 0xFFFFFFFF for no timeout). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>elock::ILockable</label>
        <link refid="classelock_1_1_i_lockable"/>
      </node>
      <node id="1">
        <label>elock::LockGuard</label>
        <link refid="classelock_1_1_lock_guard"/>
        <childnode refid="2" relation="usage">
          <edgelabel>lock_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/globalELock.hpp" line="92" column="1" bodyfile="src/globalELock.hpp" bodystart="92" bodyend="103"/>
    <listofallmembers>
      <member refid="classelock_1_1_lock_guard_1ae263dabf7533cf813161ea42ea065c77" prot="public" virt="non-virtual"><scope>elock::LockGuard</scope><name>acquired</name></member>
      <member refid="classelock_1_1_lock_guard_1a156037843b070163ae81f254bce32b81" prot="private" virt="non-virtual"><scope>elock::LockGuard</scope><name>acquired_</name></member>
      <member refid="classelock_1_1_lock_guard_1a472ae8166cd1fb102519721195f14044" prot="private" virt="non-virtual"><scope>elock::LockGuard</scope><name>lock_</name></member>
      <member refid="classelock_1_1_lock_guard_1a0b11368064442a10b7aaee01aef8b319" prot="public" virt="non-virtual"><scope>elock::LockGuard</scope><name>LockGuard</name></member>
      <member refid="classelock_1_1_lock_guard_1af9fcde875965bdc439396a074c0217b8" prot="public" virt="non-virtual"><scope>elock::LockGuard</scope><name>LockGuard</name></member>
      <member refid="classelock_1_1_lock_guard_1ad963b05624fcc754ddae382faade9bca" prot="public" virt="non-virtual"><scope>elock::LockGuard</scope><name>operator=</name></member>
      <member refid="classelock_1_1_lock_guard_1ae2e4bdc421adeb77e4c4a7f1399250bf" prot="public" virt="non-virtual"><scope>elock::LockGuard</scope><name>~LockGuard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

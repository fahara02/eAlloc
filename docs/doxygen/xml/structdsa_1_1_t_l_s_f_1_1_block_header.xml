<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structdsa_1_1_t_l_s_f_1_1_block_header" kind="struct" language="C++" prot="public">
    <compoundname>dsa::TLSF::BlockHeader</compoundname>
    <includes refid="tlsf_8hpp" local="no">tlsf.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdsa_1_1_t_l_s_f_1_1_block_header_1afb39e91dde308d138bf208f65b685305" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdsa_1_1_t_l_s_f_1_1_block_header" kindref="compound">BlockHeader</ref> *</type>
        <definition>struct BlockHeader* dsa::TLSF&lt; SLI &gt;::BlockHeader::prev_phys_block</definition>
        <argsstring></argsstring>
        <name>prev_phys_block</name>
        <qualifiedname>dsa::TLSF::BlockHeader::prev_phys_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlsf.hpp" line="52" column="27" bodyfile="src/tlsf.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdsa_1_1_t_l_s_f_1_1_block_header_1abd9449bf27337a7b9d827a90df76931b" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dsa::TLSF&lt; SLI &gt;::BlockHeader::size_and_flags</definition>
        <argsstring></argsstring>
        <name>size_and_flags</name>
        <qualifiedname>dsa::TLSF::BlockHeader::size_and_flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlsf.hpp" line="54" column="16" bodyfile="src/tlsf.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdsa_1_1_t_l_s_f_1_1_block_header_1a2dcfcdd67bf901017439498a0748c28d" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdsa_1_1_t_l_s_f_1_1_block_header" kindref="compound">BlockHeader</ref> *</type>
        <definition>struct BlockHeader* dsa::TLSF&lt; SLI &gt;::BlockHeader::next_free</definition>
        <argsstring></argsstring>
        <name>next_free</name>
        <qualifiedname>dsa::TLSF::BlockHeader::next_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlsf.hpp" line="56" column="27" bodyfile="src/tlsf.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdsa_1_1_t_l_s_f_1_1_block_header_1a2070c4b1649c9332093f4c4b034c5e15" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structdsa_1_1_t_l_s_f_1_1_block_header" kindref="compound">BlockHeader</ref> *</type>
        <definition>struct BlockHeader* dsa::TLSF&lt; SLI &gt;::BlockHeader::prev_free</definition>
        <argsstring></argsstring>
        <name>prev_free</name>
        <qualifiedname>dsa::TLSF::BlockHeader::prev_free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tlsf.hpp" line="57" column="27" bodyfile="src/tlsf.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Header for memory blocks in the <ref refid="classdsa_1_1_t_l_s_f" kindref="compound">TLSF</ref> allocator. </para>
    </briefdescription>
    <detaileddescription>
<para>This structure stores meta-information about a memory block used by the <ref refid="classdsa_1_1_t_l_s_f" kindref="compound">TLSF</ref> (Two-Level Segregated Fit) allocator. It includes a pointer to the previous physical block, the block&apos;s size and allocation flags, and pointers to the next and previous free blocks in the free list. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>dsa::TLSF&lt; SLI &gt;::BlockHeader</label>
        <link refid="structdsa_1_1_t_l_s_f_1_1_block_header"/>
        <childnode refid="2" relation="usage">
          <edgelabel>next_free</edgelabel>
          <edgelabel>prev_free</edgelabel>
          <edgelabel>prev_phys_block</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>dsa::TLSF&lt; SLI &gt;::BlockHeader</label>
        <link refid="structdsa_1_1_t_l_s_f_1_1_block_header"/>
        <childnode refid="2" relation="usage">
          <edgelabel>next_free</edgelabel>
          <edgelabel>prev_free</edgelabel>
          <edgelabel>prev_phys_block</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/tlsf.hpp" line="49" column="5" bodyfile="src/tlsf.hpp" bodystart="50" bodyend="58"/>
    <listofallmembers>
      <member refid="structdsa_1_1_t_l_s_f_1_1_block_header_1a2dcfcdd67bf901017439498a0748c28d" prot="public" virt="non-virtual"><scope>dsa::TLSF::BlockHeader</scope><name>next_free</name></member>
      <member refid="structdsa_1_1_t_l_s_f_1_1_block_header_1a2070c4b1649c9332093f4c4b034c5e15" prot="public" virt="non-virtual"><scope>dsa::TLSF::BlockHeader</scope><name>prev_free</name></member>
      <member refid="structdsa_1_1_t_l_s_f_1_1_block_header_1afb39e91dde308d138bf208f65b685305" prot="public" virt="non-virtual"><scope>dsa::TLSF::BlockHeader</scope><name>prev_phys_block</name></member>
      <member refid="structdsa_1_1_t_l_s_f_1_1_block_header_1abd9449bf27337a7b9d827a90df76931b" prot="public" virt="non-virtual"><scope>dsa::TLSF::BlockHeader</scope><name>size_and_flags</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

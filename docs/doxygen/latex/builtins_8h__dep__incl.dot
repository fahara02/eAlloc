digraph "src/builtins.h"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="src/builtins.h",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Portable bit manipulation intrinsics (ffs/fls) with architecture-specific optimizations."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="src/tlsf.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$tlsf_8hpp.html",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="src/eAlloc.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$e_alloc_8hpp.html",tooltip="TLSF-based MCU/host-agnostic memory allocator with multi-pool support."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="src/StackAllocator.hpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_stack_allocator_8hpp.html",tooltip="MCU/host-agnostic C++ allocator using a stack-allocated memory pool and TLSF."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="src/eAlloc.cpp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$e_alloc_8cpp.html",tooltip="Implementation of TLSF-based MCU/host-agnostic memory allocator (dsa::eAlloc)."];
}
